<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.14 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC6347 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6347.xml">
<!ENTITY RFC7049 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7049.xml">
<!ENTITY RFC8366 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8366.xml">
<!ENTITY I-D.ietf-anima-bootstrapping-keyinfra SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-anima-bootstrapping-keyinfra.xml">
<!ENTITY I-D.ietf-ace-coap-est SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-ace-coap-est.xml">
<!ENTITY I-D.ietf-core-multipart-ct SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-core-multipart-ct.xml">
<!ENTITY I-D.ietf-6tisch-enrollment-enhanced-beacon SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-6tisch-enrollment-enhanced-beacon.xml">
<!ENTITY I-D.ietf-anima-constrained-voucher SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-anima-constrained-voucher.xml">
<!ENTITY I-D.ietf-anima-grasp SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-anima-grasp.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC6763 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6763.xml">
<!ENTITY I-D.richardson-anima-state-for-joinrouter SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.richardson-anima-state-for-joinrouter.xml">
<!ENTITY RFC6690 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6690.xml">
<!ENTITY RFC7030 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7030.xml">
<!ENTITY RFC7228 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7228.xml">
<!ENTITY I-D.kumar-dice-dtls-relay SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.kumar-dice-dtls-relay.xml">
<!ENTITY RFC4944 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4944.xml">
<!ENTITY RFC7252 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7252.xml">
<!ENTITY RFC6775 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6775.xml">
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-anima-constrained-join-proxy-00" category="std">

  <front>
    <title abbrev="Join-Proxy">Constrained Join Proxy for Bootstrapping Protocols</title>

    <author initials="M." surname="Richardson" fullname="Michael Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
      </address>
    </author>
    <author initials="P." surname="van der Stok" fullname="Peter van der Stok">
      <organization>vanderstok consultancy</organization>
      <address>
        <email>consultancy@vanderstok.org</email>
      </address>
    </author>
    <author initials="P." surname="Kampanakis" fullname="Panos Kampanakis">
      <organization>Cisco Systems</organization>
      <address>
        <email>pkampana@cisco.com</email>
      </address>
    </author>

    <date year="2020" month="November" day="28"/>

    <area>Internet</area>
    <workgroup>anima Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document defines a protocol to securely assign a pledge to a domain, represented by an EST server, using an intermediary node between pledge and EST server. This intermediary node is known as a “constrained Join Proxy”.</t>

<t>This document extends the work of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> by replacing the Circuit-proxy by a stateless/stateful constrained (CoAP) Join Proxy.
It transports join traffic from the pledge to the Registrar without requiring per-client state.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Enrolment of new nodes into networks with enrolled nodes present is described in
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> (“BRSKI”) and makes use of Enrolment over Secure Transport (EST) <xref target="RFC7030"/>
with <xref target="RFC8366"/> vouchers to securely enroll devices.
BRSKI connects new devices (“pledges”) to extended EST servers (“Registrars”) via a Join Proxy.</t>

<t>The specified solutions use https and may be too large in terms of code space or bandwidth required for constrained devices.
Constrained devices possibly part of constrained networks <xref target="RFC7228"/> typically implement the IPv6 over Low-Power Wireless personal Area Networks (6LoWPAN) <xref target="RFC4944"/> and Constrained Application Protocol (CoAP) <xref target="RFC7252"/>.</t>

<t>CoAP can be run with the Datagram Transport Layer Security (DTLS) <xref target="RFC6347"/> as a security protocol for authenticity and confidentiality of the messages.
This is known as the “coaps” scheme.
A constrained version of EST, using Coap and DTLS, is described in <xref target="I-D.ietf-ace-coap-est"/>. The {I-D.ietf-anima-constrained-voucher} describes the BRSKI extensions to the EST server.</t>

<t>DTLS is a client-server protocol relying on the underlying IP layer to perform the routing between the DTLS Client and the DTLS Server.
However, the new “joining” device will not be IP routable until it is authenticated to the network.
A new “joining” device can only initially use a link-local IPv6 address to communicate with a neighbour node using  neighbour discovery <xref target="RFC6775"/> until it receives the necessary network configuration parameters.
However, before the device can receive these configuration parameters, it needs to authenticate itself to the network to which it connects.
IPv6 routing is necessary to establish a connection between joining device and the extended EST server.</t>

<t>A DTLS connection is required between Pledge and EST server.</t>

<t>This document specifies a new form of Join Proxy and protocol to act as intermediary between joining device and EST server to establish a connection between joining device and EST server.</t>

<t>This document is very much inspired by text published earlier in <xref target="I-D.kumar-dice-dtls-relay"/>.
<xref target="I-D.richardson-anima-state-for-joinrouter"/> outlined the various options for building a join proxy.
<xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> adopted only the Circuit Proxy method (1), leaving the other methods as future work.
This document standardizes the CoAP/DTLS (method 4).</t>

</section>
<section anchor="Terminology" title="Terminology">

<t>The following terms are defined in <xref target="RFC8366"/>, and are used
identically as in that document: artifact, imprint, domain, Join
Registrar/Coordinator (JRC), Manufacturer Authorized Signing Authority
(MASA), pledge, Trust of First Use (TOFU), and Voucher.</t>

</section>
<section anchor="reqlang" title="Requirements Language">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL
NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”,
“MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="join-proxy-functionality" title="Join Proxy functionality">

<t>As depicted in the <xref target="fig-net"/>, the joining Device, or pledge (P), in an LLN mesh
can be more than one hop away from the EST server (E) and not yet authenticated into the network.</t>

<t>In this situation, it can only communicate one-hop to its nearest neighbour, the Join Proxy (J) using their link-local  IPv6 addresses.
However, the Pledge (P) needs to communicate with end-to-end security with a Registrar hosting the EST server (E) to authenticate and get the relevant system/network parameters.
If the Pledge (P) initiates a DTLS connection to the EST server whose IP address has been pre-configured, then the packets are dropped at the Join Proxy (J) since the Pledge (P) is not yet admitted to the network or there is no IP routability to Pledge (P) for any returned messages.</t>

<figure title="multi-hop enrolment." align="left" anchor="fig-net"><artwork><![CDATA[
          ++++ multi-hop
          |E |---- mesh  +--+        +--+
          |  |    \      |J |........|P |
          ++++     \-----|  |        |  |
       EST server        +--+        +--+
       Registrar       Join Proxy   Pledge
                                    "Joining" Device

]]></artwork></figure>

<t>Without routing the Pledge (P) cannot establish a secure connection to the EST server (E) in the network assuming   appropriate credentials are exchanged out-of-band, e.g. a hash of the Pledge (P)’s raw public key could be provided to the EST server (E).</t>

<t>Furthermore, the Pledge (P) may be unaware of the IP address of the EST server (E) to initiate a DTLS connection and perform authentication.</t>

<t>To overcome the problems with non-routability of DTLS packets and/or discovery of the destination address of the EST  Server to contact, the Join Proxy is introduced.
This Join Proxy functionality is configured into all authenticated devices in the network which may act as the Join Proxy for newly joining nodes.
The Join Proxy allows for routing of the packets from the Pledge using IP routing to the intended EST Server.</t>

</section>
<section anchor="join-proxy-specification" title="Join Proxy specification">

<t>A Join Proxy can operate in two modes:</t>

<t><list style="symbols">
  <t>Statefull mode</t>
  <t>Stateless mode</t>
</list></t>

<section anchor="statefull-join-proxy" title="Statefull Join Proxy">

<t>In stateful mode, the joining node forwards the DTLS messages to the EST server.</t>

<t>Assume that the Pledge does not know the IP address of the EST Server it needs to contact.
In that situation, the Join Proxy must know the (configured or discovered) IP address of a EST server.
(Discovery can be based upon <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 4.3, or via DNS-SD service discovery <xref target="RFC6763"/>)
The Pledge initiates its request as if the Join Proxy is the intended EST server.
The Join Proxy changes the IP packet (without modifying the DTLS message) by modifying both  the source and destination addresses to forward the message to the intended EST Server.
The Join Proxy maintains a 4-tuple array to translate the DTLS messages received from the EST Server and forward it to the EST Client.
This is a form of Network Address translation, where the Join Proxy acts as a forward proxy.
In <xref target="fig-statefull2"/> the various steps of the message flow are shown, with 5684 being the standard coaps port:</t>

<figure title="constrained statefull joining message flow with EST server address known to Join Proxy." align="left" anchor="fig-statefull2"><artwork><![CDATA[
+------------+------------+-------------+--------------------------+
| EST Client | Join Proxy | EST Server  |          Message         |
|    (P)     |     (J)    |    (E)      | Src_IP:port | Dst_IP:port|
+------------+------------+-------------+-------------+------------+
|      --ClientHello-->                 |   IP_P:p_P  | IP_Ja:5684 |
|                    --ClientHello-->   |   IP_Jb:p_Jb| IP_E:5684  |
|                                       |             |            |
|                    <--ServerHello--   |   IP_E:5684 | IP_Jb:p_Jb |
|                            :          |             |            |
|       <--ServerHello--     :          |   IP_Ja:5684| IP_P:p_P   |
|               :            :          |             |            |
|               :            :          |       :     |    :       |
|               :            :          |       :     |    :       |
|        --Finished-->       :          |   IP_P:p_P  | IP_Ja:5684 |
|                      --Finished-->    |   IP_Jb:p_Jb| IP_E:5684  |
|                                       |             |            |
|                      <--Finished--    |   IP_E:5684 | IP_Jb:p_Jb |
|        <--Finished--                  |   IP_Ja:5684| IP_P:p_P   |
|              :             :          |      :      |     :      |
+---------------------------------------+-------------+------------+
IP_P:p_P = Link-local IP address and port of Pledge (DTLS Client)
IP_E:5684 = Global IP address and coaps port of EST Server
IP_Ja:5684 = Link-local IP address and coaps port of Join Proxy
IP_Jb:p_Rb = Global IP address and port of Join proxy
]]></artwork></figure>

</section>
<section anchor="stateless-join-proxy" title="Stateless Join Proxy">

<t>The Join Proxy is stateless to minimize the requirements on the constrained Join Proxy device.
Stateless operation requires no memory in the Join Proxy device, but may also reduce the CPU impact as the device does not need to search through a state table.</t>

<t>When a client joining device attempts a DTLS connection to the EST server, it uses its link-local IP address as its IP source address.
This message is transmitted one-hop to a neighbouring (join proxy) node.
Under normal circumstances, this message would be dropped at the neighbour node since the joining device is not yet IP routable or it is not yet authenticated to send messages through the network.
However, if the neighbour device has the Join Proxy functionality enabled, it routes the DTLS message to a specific EST server.
Additional security mechanisms need to exist to prevent this routing functionality being used by rogue nodes to bypass any network authentication procedures.</t>

<t>If an untrusted DTLS Client that can only use link-local addressing wants to contact a trusted end-point EST server, it sends the DTLS message to the Join Proxy.</t>

<t>The Join Proxy extends this message into a new type of message called Join ProxY (JPY) message and sends it on to the EST server.</t>

<t>The JPY message payload consists of two parts:</t>

<t><list style="symbols">
  <t>Header (H) field: consisting of the source link-local address and port of the Pledge (P), and</t>
  <t>Contents (C) field: containing the original DTLS message.</t>
</list></t>

<t>On receiving the JPY message, the EST server retrieves the two parts.</t>

<t>The EST server transiently stores the Header field information.
The EST server uses the Contents field to execute the EST server functionality.
However, when the EST server replies, it also extends its DTLS message with the header field in a JPY message and sends it back to the Join Proxy.
The EST server SHOULD NOT assume that it can decode the Header Field, it should simply repeat it when responding.
The Header contains the original source link-local address and port of the DTLS Client from the transient state stored earlier (which can now be discarded) and the Contents field contains the DTLS message.</t>

<t>On receiving the JPY message, the Join Proxy retrieves the two parts.
It uses the Header field to route the DTLS message retrieved from the Contents field to the Pledge.</t>

<t>The <xref target="fig-stateless"/> depicts the message flow diagram:</t>

<figure title="constrained stateless joining message flow." align="left" anchor="fig-stateless"><artwork><![CDATA[
+--------------+------------+---------------+-----------------------+
| EST  Client  | Join Proxy |    EST server |        Message        |
|     (P)      |     (J)    |      (E)      |Src_IP:port|Dst_IP:port|
+--------------+------------+---------------+-----------+-----------+
|      --ClientHello-->                     | IP_P:p_P  |IP_Ja:p_Ja |
|                    --JPY[H(IP_P:p_P),-->  | IP_Jb:p_Jb|IP_E:p_Ea  |
|                          C(ClientHello)]  |           |           |
|                    <--JPY[H(IP_P:p_P),--  | IP_E:p_Ea |IP_Jb:p_Jb |
|                         C(ServerHello)]   |           |           |
|      <--ServerHello--                     | IP_Ja:p_Ja|IP_P:p_P   |
|              :                            |           |           |
|              :                            |     :     |    :      |
|                                           |     :     |    :      |
|      --Finished-->                        | IP_P:p_P  |IP_Ja:p_Ja |
|                    --JPY[H(IP_P:p_P),-->  | IP_Jb:p_Jb|IP_E:p_Ea  |
|                          C(Finished)]     |           |           |
|                    <--JPY[H(IP_P:p_P),--  | IP_E:p_Ea |IP_Jb:p_Jb |
|                         C(Finished)]      |           |           |
|      <--Finished--                        | IP_Ja:p_Ja|IP_P:p_P   |
|              :                            |     :     |    :      |
+-------------------------------------------+-----------+-----------+
IP_P:p_P = Link-local IP address and port of the Pledge
IP_E:p_Ea = Global IP address and join port of EST Server
IP_Ja:p_Ja = Link-local IP address and join port of Join Proxy
IP_Jb:p_Jb = Global IP address and port of Join Proxy

JPY[H(),C()] = Join Proxy message with header H and content C

]]></artwork></figure>

</section>
<section anchor="stateless-message-structure" title="Stateless Message structure">

<t>The JPY message is constructed as a payload with media-type application/multipart-core specified in <xref target="I-D.ietf-core-multipart-ct"/>.</t>

<t>Header and Contents fields use different media formats:</t>

<t><list style="numbers">
  <t>header field: application/cbor containing a CBOR array <xref target="RFC7049"/> with the pledge IPv6 Link Local address as a 16-byte binary value, the pledge’s UDP port number, if different from 5684, as a CBOR integer, and the proxy’s ifindex or other identifier for the physical port on which the pledge is connected. Header is not DTLS encrypted.</t>
  <t>Content field: Any of the media types specified in <xref target="I-D.ietf-ace-coap-est"/> and <xref target="I-D.ietf-anima-constrained-voucher"/> dependent on the function that is requested:</t>
</list></t>

<figure><artwork><![CDATA[
 * application/pkcs7-mime; smime-type=server-generated-key
 * application/pkcs7-mime; smime-type=certs-only
 * application/voucher-cms+cbor
 * application/voucher-cose+cbor
 * application/pkcs8
 * application/csrattrs
 * application/pkcs10
 * application/pkix-cert
]]></artwork></figure>

<t>(XXX- add CDDL for CBOR array above)</t>

<t>The content fields are DTLS encrypted. In CBOR diagnostic notation the payload JPY[H(IP_P:p_P), with cf is content-format of DTLS-content, will look like:</t>

<figure><artwork><![CDATA[
      [ 60, [IP_p, p_P, ident]
        cf, h'DTLS-content']
]]></artwork></figure>

<t>Examples are shown in <xref target="examples"/>.</t>

</section>
</section>
<section anchor="comparison-of-stateless-and-statefull-modes" title="Comparison of stateless and statefull modes">

<t>The stateful and stateless mode of operation for the Join Proxy have
their advantages and disadvantages.  This section should enable to
make a choice between the two modes based on the available device
resources and network bandwidth.</t>

<figure title="Comparison between stateful and stateless mode" align="left" anchor="fig-comparison"><artwork><![CDATA[
+-------------+----------------------------+------------------------+
| Properties  |         Stateful mode      |     Stateless mode     |
+-------------+----------------------------+------------------------+
| State       |The Join Proxy needs        | No information is      |
| Information |additional storage to       | maintained by the Join |
|             |maintain mapping between    | Proxy                  |
|             |the address and port number |                        |
|             |of the pledge and those     |                        |
|             |of the EST server.          |                        |
+-------------+----------------------------+------------------------+
|Packet size  |The size of the forwarded   |Size of the forwarded   |
|             |message is the same as the  |message is bigger than  |
|             |original message.           |the original,it includes|
|             |                            |additional source and   |
|             |                            |destination addresses.  |
+-------------+----------------------------+------------------------+
|Specification|The Join Proxy needs        |New JPY message to      |
|complexity   |additional functionality    |encapsulate DTLS message|
|             |to maintain state           |The EST server          |
|             |information, and modify     |and the Join Proxy      |
|             |the source and destination  |have to understand the  |
|             |addresses of the DTLS       |JPY message in order    |
|             |handshake messages          |to process it.          |
+-------------+----------------------------+------------------------+
]]></artwork></figure>

</section>
<section anchor="discovery" title="Discovery">

<t>It is assumed that Join Proxy seamlessly provides a coaps connection between Pledge and coaps EST server. In particular this section replaces section 4.2 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t>The discovery follows two steps:</t>

<t><list style="numbers">
  <t>The pledge is one hop away from the EST server. The pledge discovers the link-local address of the EST_server as described in {I-D.ietf-ace-coap-est}. From then on, it follows the BRSKI process as described in {I-D.ietf-ace-coap-est}, using link-local addresses.</t>
  <t>The pledge is more than one hop away from a relevant EST server, and discovers the link-local address of a Join Proxy. The pledge then follows the BRSKI procedure using the link-local address of the Join Proxy.</t>
</list></t>

<t>Once a pledge is enrolled, it may function as Join Proxy. The Join Proxy functions are advertised as descibed below. Usually, the Join Proxy functions are offered via a “join” port, and not the standard coaps port. The Join Proxy MUST show the join port number when reponding to the .well-known/core request addressed to the standard coap/coaps port.</t>

<t>Three discovery cases are discussed: coap discovery, 6tisch discovery and GRASP discovery.</t>

<section anchor="pledge-discovery-of-join-proxy" title="Pledge discovery of Join Proxy">

<t>The pledge and Join Proxy are assumed to communicate via Link-Local addresses.</t>

<section anchor="coap-discovery" title="CoAP discovery">

<t>The discovery of the coaps EST server, using coap discovery, by the Join Proxy follows section 6 of <xref target="I-D.ietf-ace-coap-est"/>.</t>

</section>
<section anchor="autonomous-network" title="Autonomous Network">

<t>In the context of autonomous networks, the Join Proxy uses the DULL GRASP M_FLOOD mechanism to announce itself. Section 4.1.1 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> discusses this in more detail.
The Registrar announces itself using ACP instance of GRASP using M_FLOOD messages.
Autonomous Network Join Proxies MUST support GRASP discovery of EST server as decribed in section 4.3 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> .</t>

</section>
<section anchor="tisch-discovery" title="6tisch discovery">

<t>The discovery of EST server by the pledge uses the enhanced beacons as discussed in <xref target="I-D.ietf-6tisch-enrollment-enhanced-beacon"/>.</t>

</section>
</section>
<section anchor="join-proxy-discovers-est-server" title="Join Proxy discovers EST server">

<section anchor="autonomous-network-1" title="Autonomous Network">

<t>The pledge MUST listen for GRASP M_FLOOD <xref target="I-D.ietf-anima-grasp"/> announcements of the objective: “AN_Proxy”.
See section Section 4.1.1 <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> for the details of the objective.</t>

</section>
<section anchor="coap-discovery-1" title="CoAP discovery">

<t>In the context of a coap network without Autonomous Network support, discovery follows the standard coap policy.
The Pledge can discover a Join Proxy by sending a link-local multicast message to ALL CoAP Nodes with address FF02::FD. Multiple or no nodes may respond. The handling of multiple responses and the absence of responses follow section 4 of <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/>.</t>

<t>The presence and location of (path to) the Join Proxy resource are discovered by
sending a GET request to “/.well-known/core” including a resource type (rt)
parameter with the value “brski-proxy” <xref target="RFC6690"/>.
Upon success, the return payload will contain the root resource of the Join Proxy resources.
It is up to the implementation to choose its root resource; throughout this document the
example root resource /jp is used.
The example below shows the discovery of the presence and location of Join Proxy resources.</t>

<figure><artwork><![CDATA[
  REQ: GET coap://[FF02::FD]/.well-known/core?rt=brski-proxy

  RES: 2.05 Content
  <coaps://[IP_address]:jp-port/jp>; rt="brski-proxy";ct=62
]]></artwork></figure>

<t>Port numbers are assumed to be the default numbers 5683 and 5684 for coap and coaps respectively (sections 12.6 and 12.7 of <xref target="RFC7252"/> when not shown in the response.
Discoverable port numbers are usually returned for Join Proxy resources in the &lt;href&gt; of the payload (see section 5.1 of <xref target="I-D.ietf-ace-coap-est"/>).</t>

</section>
</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>It should be noted here that the contents of the CBOR map used to convey return address information is not protected.
However, the communication is between the Proxy and a known registrar are over the already secured portion of the network, so are not visible to eavesdropping systems.</t>

<t>All of the concerns in <xref target="I-D.ietf-anima-bootstrapping-keyinfra"/> section 4.1 apply.
The pledge can be deceived by malicious AN_Proxy announcements.
The pledge will only join a network to which it receives a valid <xref target="RFC8366"/> voucher.</t>

<t>If the proxy/Registrar was not over a secure network, then an attacker could change the cbor array, causing the pledge to send traffic to another node.
If the such scenario needed to be supported, then it would be reasonable for the Proxy to encrypt the CBOR array using a locally generated symmetric key.
The Registrar would not be able to examine the result, but it does not need to do so.
This is a topic for future work.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document needs to create a registry for key indices in the CBOR map.  It should be given a name, and the amending formula should be IETF Specification.</t>

<section anchor="resource-type-registry" title="Resource Type registry">

<t>This specification registers a new Resource Type (rt=) Link Target Attributes in the “Resource Type (rt=) Link Target Attribute Values” subregistry under the “Constrained RESTful Environments (CoRE) Parameters” registry.</t>

<figure><artwork><![CDATA[
  rt="brski-proxy". This EST resource is used to query and return
  the supported EST resource of a Join Proxy placed between Pledge
  and EST server.
]]></artwork></figure>

</section>
</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>Many thanks for the comments by Brian Carpenter.</t>

</section>
<section anchor="contributors" title="Contributors">

<t>Sandeep Kumar, Sye loong Keoh, and Oscar Garcia-Morchon are the co-authors of the draft-kumar-dice-dtls-relay-02. Their draft has served as a basis for this document. Much text from their draft is copied over to this draft.</t>

</section>
<section anchor="changelog" title="Changelog">

<section anchor="to-00" title="00 to 00">

<t><list style="symbols">
  <t>copied from vanderstok-anima-constrained-join-proxy-05</t>
</list></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC6347;
&RFC7049;
&RFC8366;
&I-D.ietf-anima-bootstrapping-keyinfra;
&I-D.ietf-ace-coap-est;
&I-D.ietf-core-multipart-ct;
&I-D.ietf-6tisch-enrollment-enhanced-beacon;
&I-D.ietf-anima-constrained-voucher;
&I-D.ietf-anima-grasp;
&RFC2119;
&RFC8174;


    </references>

    <references title='Informative References'>

&RFC6763;
&I-D.richardson-anima-state-for-joinrouter;
&RFC6690;
&RFC7030;
&RFC7228;
&I-D.kumar-dice-dtls-relay;
&RFC4944;
&RFC7252;
&RFC6775;


    </references>


<section anchor="examples" title="Stateless Proxy payload examples">

<figure><artwork><![CDATA[
Examples need to be redone
]]></artwork></figure>

<t>Examples are extensions of two examples shown in <xref target="I-D.ietf-ace-coap-est"/>.
The following content formats are used:</t>

<t><list style="symbols">
  <t>60:  application/cbor</t>
  <t>62:  application/multipart</t>
  <t>281: application/pkcs7-mime; smime-type=certs-only</t>
  <t>284: application/pkcs8</t>
  <t>286: application/pkcs10</t>
</list></t>

<t>For presentation purposes the payloads are abbreviated as follows:</t>

<t>cacrts request payload:</t>

<figure><artwork><![CDATA[
   <cacrts request payload> = <empty>
]]></artwork></figure>

<t>cacrts response payload:</t>

<figure><artwork><![CDATA[
   <cacrts response payload> =
   DTLS_encrypt(
   3082027b06092a864886f70d010702a082026c308202680201013100300b
   06092a864886f70d010701a082024e3082024a308201f0a0030201020209
   009189bcdf9c99244b300a06082a8648ce3d0403023067310b3009060355
   040613025553310b300906035504080c024341310b300906035504070c02
   4c4131143012060355040a0c0b4578616d706c6520496e63311630140603
   55040b0c0d63657274696669636174696f6e3110300e06035504030c0752
   6f6f74204341301e170d3139303130373130343034315a170d3339303130
   323130343034315a3067310b3009060355040613025553310b3009060355
   04080c024341310b300906035504070c024c4131143012060355040a0c0b
   4578616d706c6520496e6331163014060355040b0c0d6365727469666963
   6174696f6e3110300e06035504030c07526f6f742043413059301306072a
   8648ce3d020106082a8648ce3d03010703420004814994082b6e8185f3df
   53f5e0bee698973335200023ddf78cd17a443ffd8ddd40908769c55652ac
   2ccb75c4a50a7c7ddb7c22dae6c85cca538209fdbbf104c9a38184308181
   301d0603551d0e041604142495e816ef6ffcaaf356ce4adffe33cf492abb
   a8301f0603551d230418301680142495e816ef6ffcaaf356ce4adffe33cf
   492abba8300f0603551d130101ff040530030101ff300e0603551d0f0101
   ff040403020106301e0603551d1104173015811363657274696679406578
   616d706c652e636f6d300a06082a8648ce3d0403020348003045022100da
   e37c96f154c32ec0b4af52d46f3b7ecc9687ddf267bcec368f7b7f135327
   2f022047a28ae5c7306163b3c3834bab3c103f743070594c089aaa0ac870
   cd13b902caa1003100
   )
]]></artwork></figure>

<t>serverkeygen request payload:</t>

<figure><artwork><![CDATA[
   <serverkeygen request payload> =
   DTLS_encrypt(
   3081cf3078020100301631143012060355040a0c0b736b67206578616d70
   6c653059301306072a8648ce3d020106082a8648ce3d030107034200041b
   b8c1117896f98e4506c03d70efbe820d8e38ea97e9d65d52c8460c5852c5
   1dd89a61370a2843760fc859799d78cd33f3c1846e304f1717f8123f1a28
   4cc99fa000300a06082a8648ce3d04030203470030440220387cd4e9cf62
   8d4af77f92ebed4890d9d141dca86cd2757dd14cbd59cdf6961802202f24
   5e828c77754378b66660a4977f113cacdaa0cc7bad7d1474a7fd155d090d
   )
]]></artwork></figure>

<t>serverkeygen response payload:</t>

<figure><artwork><![CDATA[
   <serverkeygen response payload> =
   DTLS_encrypt(
   84                                   # array(4)
   19 011C                              # unsigned(284)
   58 8A                                # bytes(138)
   308187020100301306072a8648ce3d020106082a8648ce3d030107046d30
   6b02010104200b9a67785b65e07360b6d28cfc1d3f3925c0755799deeca7
   45372b01697bd8a6a144034200041bb8c1117896f98e4506c03d70efbe82
   0d8e38ea97e9d65d52c8460c5852c51dd89a61370a2843760fc859799d78
   cd33f3c1846e304f1717f8123f1a284cc99f
   19 0119                              # unsigned(281)
   59 01D3                              # bytes(467)
   308201cf06092a864886f70d010702a08201c0308201bc0201013100300b
   06092a864886f70d010701a08201a23082019e30820143a0030201020208
   126de8571518524b300a06082a8648ce3d04030230163114301206035504
   0a0c0b736b67206578616d706c65301e170d313930313039303835373038
   5a170d3339303130343038353730385a301631143012060355040a0c0b73
   6b67206578616d706c653059301306072a8648ce3d020106082a8648ce3d
   030107034200041bb8c1117896f98e4506c03d70efbe820d8e38ea97e9d6
   5d52c8460c5852c51dd89a61370a2843760fc859799d78cd33f3c1846e30
   4f1717f8123f1a284cc99fa37b307930090603551d1304023000302c0609
   6086480186f842010d041f161d4f70656e53534c2047656e657261746564
   204365727469666963617465301d0603551d0e04160414494be598dc8dbc
   0dbc071c486b777460e5cce621301f0603551d23041830168014494be598
   dc8dbc0dbc071c486b777460e5cce621300a06082a8648ce3d0403020349
   003046022100a4b167d0f9add9202810e6bf6a290b8cfdfc9b9c9fea2cc1
   c8fc3a464f79f2c202210081d31ba142751a7b4a34fd1a01fcfb08716b9e
   b53bdaadc9ae60b08f52429c0fa1003100
   )
]]></artwork></figure>

<section anchor="cacerts" title="cacerts">

<t>The request from Join Proxy to EST server looks like:</t>

<figure><artwork><![CDATA[
    Get coaps://192.0.2.1/est/crts
    (Accept: 62)
    (Content-format: 62)
    payload =
    82                    # array(2)
    18 3C                 # unsigned(60)
    83                    # array(3)
    69                    # text(9)
         464538303A3A414238 # "FE80::AB8"
    19 237D               # unsigned(9085)
    65                    # text(5)
         6964656E74       # "ident"
]]></artwork></figure>

<t>In CBOR Diagnostic:</t>

<figure><artwork><![CDATA[
    payload = [60, ["FE80::AB8", 9085, "ident"]]
]]></artwork></figure>

<t>The response will then be:</t>

<figure><artwork><![CDATA[
     2.05 Content
     (Content-format: 62)
       Payload =
     84                                # array(4)
     18 3C                             # unsigned(60)
     83                                # array(3)
     69                                # text(9)
         464538303A3A414238            # "FE80::AB8"
     19 237D                           # unsigned(9085)
     65                                # text(5)
         6964656E74                    # "ident"
     19 0119                           # unsigned(281)
     59 027F                           # bytes(639)
     <cacrts response payload>
     ]
]]></artwork></figure>

<t>In CBOR diagnostic:</t>

<figure><artwork><![CDATA[
    payload = [60, ["FE80::AB8", 9085, "ident"],
               62, h'<cacrts response payload>']
]]></artwork></figure>

</section>
<section anchor="serverkeygen" title="serverkeygen">

<t>The request from Join Proxy to EST server looks like:</t>

<figure><artwork><![CDATA[
    Get coaps://192.0.2.1/est/skg
    (Accept: 62)
    (Content-Format: 62)
      Payload =
    83                                # array(4)
    18 3C                             # unsigned(60)
    83                                # array(3)
    69                                # text(9)
         464538303A3A414238           # "FE80::AB8"
    19 237D                           # unsigned(9085)
    65                                # text(5)
         6964656E74                   # "ident"
    19 011E                           # unsigned(286)
    58 D2                             # bytes(210)
    <serverkeygen request payload>
]]></artwork></figure>

<t>In CBOR diagnostic:</t>

<figure><artwork><![CDATA[
    payload = [60, ["FE80::AB8", 9085, "ident"],
               286, h'<serverkeygen request payload>']
]]></artwork></figure>

<t>The response will then be:</t>

<figure><artwork><![CDATA[
     2.05 Content
     (Content-format: 62)
       Payload =
     83                                # array(4)
     18 3C                             # unsigned(60)
     83                                # array(3)
     69                                # text(9)
         464538303A3A414238            # "FE80::AB8"
     19 237D                           # unsigned(9085)
     65                                # text(5)
         6964656E74                    # "ident"
     19 011E                           # unsigned(286)
     59 0269                           # bytes(617)
     <serverkeygen response payload>
]]></artwork></figure>

<t>In CBOR diagnostic:</t>

<figure><artwork><![CDATA[
    payload = [60, ["FE80::AB8", 9085, "ident"],
               286, h'<serverkeygen response payload>']
]]></artwork></figure>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAH8kwl8AA+18bXPjRnLwd1Tdf5hHWxVLscgFCBAA6dvLyZLW1t6+KCtt
fFeOa2sADCScSIAPAEqrWJvfkt+SX5bunhlgAIKUdHFyX8KyVyTmraffu6cH
o9HIqrN6IebsuMiruuRZLhL2pshydl4WX+5ZWpTs+6KosW21yvIrfF4XcbGo
LB5FpbidU/cRdbeSIs75EqZLSp7Wo0zU6Yjn2ZKP4nb+0V9xwAoHjGzbsl6w
quZ58pkvihyG1uVaWFa2KulrVU9se2ZPLF4KPmdneS3KXNTW3dWc0czsp6K8
QcB+KIv1yrq5azuNThAKK+b1HJZILGuVzRl8XrCY52xdCcbLkt+z/SxlfLFg
96I6YLDha15ds2tRCosx2OscG+BrVZR1KdJqTlMkIuXrRV1BD91+v5TN+NPi
6/q6KOeWZY1YlsPTd2P2MYuveZlURQ7dJaLe4SOx6DYVJezuAnAiFkuA9KJI
6zvYP20VVxJLni3mbBmX3yKK/1jpruOYN+udj9ktDE5EyS7q4qZZ8VwAdvpN
tOItTlNW8IQhuWB3PI/v2/WMh39s+45hrLnon/hyxXN+k1Xtkjwvqm4DLXic
VXHBLu6rWiyNfa1uZM8/xtg+joulZeVFueR1divm0O/j62Pf9QL1NbC9mfoa
ur6PX89GJ2OD+SKTg0c34j7L05J3O8YCeJSvRqKqOw1xUYrREradrXhZj+Ju
q18DiNcjkZfFYrEUeQ1frwFBwOWR4ICwAWhMUbgt1jFw2kCvq5JXq7kFkPZ3
Hviu7l82XKNGgSTVYgRDSMhAImo5OY7zZ3aDMbf5OpmEerab9ZKXoyQDVCT1
ohqVYsHvVT9v5nnNkOmkgSWYAouPRiPGI9xUXFvW5XVWMdAEa8QHygnstGKc
rZTmQImpRLyG6e8Zr6rsKsfWhUiuBLZxGAyMkB+yUqxKUcEsoJQi6Juz04tL
GFveivIQBBjFHh5mKO9LkWS8vGd5kQgWifpOiFxPCrxqjBwzgnBzFDy8yYs7
gAbB3YsHVeLeuL9D8aUWeQKK4FqwO5BQVqTs11+fxIJfv+K+YJsLHuNmcIrj
rIzXWS0VJG2bEVUXoqpe0rd0vWAmcPvHxdH5gQHj2DqrQXnyvFqBzqoY8gL+
TtMsZmlZLGmhFuP466O4ynDGkt1loLnWNYD1/9dZiWCtRDmKFxlulgAYS5Iv
syRZCFTgoHHLIlnHdQb6yzpFaSDUACZycUfYJYQX8LNGHFW0CpNyA1uQPRS1
kRDwMy6zCJqy3Ho6Nvf3vv948aezvQOi+ZLfwKyo6AEQA6pbVHzEgexSY4nt
A4ccAOGUfHz9ahGI9AD1CsyupLXqcLDcAwB8C4JTjS0CAOmTixhwj/tXbQCd
xHkF8MEUknGEyZvYp6EEdrvNODCASVrgPsGqlYizNIOxVbFYI9rlPq/relWp
vQPzIHULtuAl0BlZABi+QlzEyO7VCpQe2rsI+t9lCWxWkhxmRbtvslizu+PN
h2xVgBBHgArUkHL6tlNDcIlZUDeAyPp+lcVgcu9ZtgSUEFWQCc/Ob31JnrfF
3ei8uINvPwFAyPvIhaDo+IIdgSvA3ut59/23xU/nR+8V7VBRwQqIAhPWo9Vq
AUsiphoXRguOgmw6+foV0IvPyEEA7JXrXDIqAnfCaw5aeWnwzFt+r1kpq8GR
OLl8e6HmQwOFcKAqqXSHRgUiftFDgI1nMbYgvIC2NEvwEV/gM8AkrruEzfMr
RL7UW4aWwuY9NFvVHgM7BIgcW0cd9CNP4Z5RAC4utdI8hiG0JAJ82Je3jvYy
7CKghyHz9aVxwKB9bSaUQEqhIIaviFmV1jG0smUhMAgLZ1LZjGRLizWUNwQf
9oOD1+iCyCdn58DlSAuYF/gEbSZ1QQuI7dogEB1xmWOpzhAHzbMLBciPwHdk
YbAF5XcPFShMs6dYHngCJD4vauQRWBpX4dECIaqzBctIgzXk5Wi+1H6VNCCV
BidGvitylIs8QzaAb+SnskWW34wWBQiNFBKeJCUKBcwL/tFyndM6klk5zJ1d
XUfFupSGTRLdeJqgYwVbvFe8CmYceLWBvhSxAIejUiDHyIBoJCXwkk+v1qWU
JhB6cPJAtVQG5iIBJBA03tiZmhcfw6a2TXOIIORCJLQ7E43QUIlF2kMm/ry7
Bk8Ix2m9CyYQ0aTpn1XGPlD1VkiwrEJkqSEIhGYTRRYNu+aSAYUNbHskuceY
BlZrNKme8nzQFen7ElqvV0TEO0aMDLJrhGQ4g+lKgc+FqqDjzuzYR7v434aH
HcDDd+Kp5RppASpSIgAQDohjqzUtBE8EL0H6ylbTDDqeqIxl85O8XOBf+Lsg
pYe0uuVlVqzB2q2kdUSNG62zRUJOo3SJVtKiPt294AlMBwuQiBrOmiIN8O91
Af6Yc3DIFoLfapeugH9K1VohsdJ1jc6HVAU9DsBYGHab/ZuSP7RHL4nD9tX8
3sEYna5LoHeWF4vi6p41n19fGI+/SmchBf+kuCNgyAHAUFK65UrbNx7OIZEY
20HrJJY0RtJQE4sBQLxuYIUIvKyzFBjwEO04uIrwRfvuyLFW48q8PC4K2FPO
ayDD/puPx4Chdzxf42DARMmOKFyGTSfsAgICBFY9qu+t/XdHF0cwQnpPh2CA
1xU5Gq8zCEHZJ1Am+5cfXn86kPD/i7RBhKSPUg4R3ArMdX61BlMKWAL5XMAv
hSEgMRIDiLP37tPF5d6h/Mvef6DvH0//+dPZx9MT/H7x49Hbt80XS/W4+PHD
p7cn7bd25PGHd+9O35/IwfCUdR5Ze++O/rInwd77cH559uH90ds9iWmTK5Ak
IK6RkHIOjjKyIa+sjt3+/vj8P//D8YCi/w9IOnGcGfCs/BE6AbpFd6BL5WrE
wvIncNm9BcwOcomzYCok5qus5gvQxUD36hrdDUyIAEoBp2Z+aJ2TxiCHBVQh
OhLg2tUSHmTfX38FJT8CVY3chQ+0TjkhnXKIDqiKRPbPgYAIQM7evn2Pfs+1
pRyxpbQmZB3Byy3Ae7kDB7eJZQyttn8qnX80z/ei7tlhCkI6ltg6U8iusnpN
togMUGOJTfMKi49wcZgjI98e6FLVrWGVOzTws//mQFlfaMhK04x37Lioem7H
eYOS1hRuGHowRqO6GMGf1sVUHkAbzl0XVa0VUQ9NffOKaLsS0hVHp/uWo0Ki
9MxLbWxNc3+W9mGVbktN9qtvFTdcPmC/oiIHSnsz18BtEQXuJbqd0j8QCaFE
shPELDeiVjqsLIBpQQzqIbQD1mOxAV/V8kWyzOpN1wz5EdW1kH1b9y4jnxw6
G9ORG59jBA9aDNVp66tb/w4fy2o187fwYZRIQhYyGh5O2cOI4mlgeOg3Gn3b
jIHvZk/6j7F/VT/fsIex+jycs4f+YtQVZx7pgXoS3dOghbHi0OotP8mPgWym
MGIsv/2z90Z7vFL+FZ5+nbMXSk8wyki/+qZBlYywUQ2OvwHlBNbh1d5CpPUe
KO+fdK5C+Xk9coMQI7lNL0fG7bv5EmVDqS/NFbyq1kvyohloSmC8EtmcxcCd
MmCTLCm+gKuSX6GLsK5HRTrC2PqQifHVGNamxHLRF5pvwFvkd9I/iskUxcV6
gZ4jOii3WdLyaBdGYLLX6xKZFdXjht5QGYB1zil5rNY1pE092VQKWooHhJi8
TxVgGboDmtAdLCh4Bz0lBQ/Ah6hoqZI9OfhvpijB8jR7I9J58rIwYxMFH5i4
Gj0HWn4TdBW2SQWZ1+SN9NSBzPZRhkokyuHaZsSwc6t5pL1Ai9g1Izr10eMS
GYYg4pVX3gME9QW49WBVtBWkxNeYnBDTx0eHTfqsmrPVjjWyGsunCC6NjFJW
JAmSY9BdaEIWHeB2bbiKOSQVMZwx2sgKAr0p+IK93hVgigHiOWq2f2QXKh25
oKftI8rX0CNY64XRrZ2a7G6TzsS+XfeAAldAwB16/m2MrhXsYALhCIVUSCfV
wE1SCKn2MW+yQwgUI5nRp+KosXQSYFrDSejRdok+abPCvsFDBlOL5KC3OO9s
Yf+k4X7l+UQcPHG2XhX5M5LKlZJWb+ySg4VZxJP3F6OLE1oJY7mNFIDvfv16
QIyo0NbacvR1MKBFXwfjgHRAwDaYTW+px9pSP1aaDJKf2b5OOgMjZOm9VuUm
yQ8wkmybIwiqGHWqwPFSwemAqpCsohjJzKftlJAe0BjS1PA/ujXeqF6Dw6rO
DnESTAcuUEI2uVRlPJKup6oYDSHWgAHTGRwts1Ntwo83iQCV9mRHOv+jFieO
vCO/pUcbjlloruagtVTYe5Yr51xL4WKCqVkjdgbHb1X10pAsBdVEto7CgkOp
26d+6AG3arrpIJZRbpJhrnSuLP23I+Oz/UfvV7fJejCwBA6NsdsHE8Gt08PY
OwV+4wZZ1IiGUnlF+OvNQfMDbaFquijjz2fnc0r5PrCTqta/Hv7G7XQ7WgrM
0Uju6EcB6n80+sOG84T9zs4/w9qfz/EXfH/D54T7B+tho/vwlGqSNxHM8iai
SU7lHNsmGfg8bP+1ZZLfj0aSKgqUFhK1+oMB1WOQzJ8JycDiG5O0yHwwkDwA
yXzLj2fh5LFJ5u0v3fpbTzIavQYVjxm5ltc2cfIMZhuY8u/EbETxFhQDkkeY
bWPYJiRP5ZP5tl8PnScPnR/WDrX3dH3SgPWKvTXPDRq/g7z4Qh7W6YjBOBY5
sFpMvWI/LIpoc3ir2dXZklK6lsEnu5bvjjf8Qk2Yj9HWtTujyJp1o8jWoOlg
0jwSa1obX7Nj2sieGTGRXlgeuoGRNg5jN+JR7eySA2w6u5cbDlNzqI9zQmiZ
LbN/Eyr1YuQs1VnXcDGCikPGVruo9NbRAVLTUBZjKSBEvNfhysYEhyxC3wvj
lkVVwEiMlGT2+fwT5naNcEadBTRONfrK8kCclzGelEIEcnWtqxYYHYyBb/4T
ZnD0yd7GwUJdi+WqflLWiLJz60q5pYthBpON8EQ7h7JBeVSa3pnyn1QiyMju
GUdoCOZ+e1xwQJHJ2PqEh4+MypIWLMZjgCV6PRAUHsp0ol7kTgfzvXRV74yu
TVf1cGOkrMyjxqJU54zDeU4iSJ4Y8ZKiSyf32aQclUtvnBDKxa8HYthOtCxy
hCYhotBBzGasJvGpo8xObABebCbnahOYS4EhQlYtq4a1xJesIv94VQK4VCuA
R2wq0u0CJJ1QPL6g0priai1UdQnmz+9XnHRIe5jZTWIgjWPg/pJSeGcp5qLX
OdUhiqRzckzRYJMkxkNagxUVuyEkdzyvzVASUKGnw/TtChBb97m7auqJ+njs
0mK8oVfaWiSTzXPF0XdYeEGZIN2EZzumRvkLuMDnfzlo2jmllnFGAGtIGjUI
539pxqz4/aLgVM5QAd1kAHFXUHWIThz8KDiKz/6PByzNxCKZ695GqkOJ7iZa
Ozagm/Sisw1a4bjAuA5W3z8218AorjmWK7OrDHnPxDJs6IM+qdYdjd0d9lNm
pajLTOjD8mafCi/maStqGmQdYJeqLko1QmGCIGRNtR+m03rjSeXJA0G1MzmG
5AOER8WfxoiOYBjCfqeT6Z1trICv5dk72QDNSahHO1zY1MNcdyHHMiWDCzqc
E0GUP8S+vS22Z2cy36pSOeo0JhFUtmQg7TUuLSXmmrRsheVEVFAn5DjaKqB6
VeR48CtXVKMVN1RdXng615naoAnvGyor80eUbo+892WGELeDmaJI5mEgUsbE
kC4z6BG4A+ezWdVQDltZ9axuuavDj0AyUuqbukjPZWQ2NvmylU0lDka+AZ2V
r1/VcWG1mWFIMiq2Gkwb7Iy0t6cOdN5AE62fOWCdA5HGne9lDrSjrzMHA6kD
M3lg5A4etmcOnrGjzvcnpw4kbEY8J910iH/49twBMNPPP+7rQQeHNLEZOj1Q
nLD6fMofieeO9w34Dn7pRnGd71uzB5vAKFgUAA9PTB8c7xupAATlcVgG0wf9
j46QEaUPTw8MN2Z5BJZnzLIZ/j895n7SLEMZhIFZ/o5cp+EjOv99ua4HypO4
blcuQo/87bhuiNJPzUfs1lLPSki0VsNq8bwtFSADs21ZCGK0XWt2hg8kId48
MQmhonzJLQeHx/tA5VedEwTTe1Ke04+66hfNJju2BpIYMj+wJYdBjUM5jEfy
EtqgwWxrKr/a9OHlIajsQIVGeEND+fW0Bao0HFE4wdvS6pfGRRms2GnL1LtV
xRuXaqjyWrkeqnTb8CVkbXuSpakoEVW0OJOusowomDPu+KPzDlRxVJSm88/Z
8fcfPqoTHFXx72GtVOPbqookKtFB7mFvu64g4sPxR9E9+EYR+I3lPbvli7Xy
ueTobyr26eRc8km+XkYqzm63QZ4TJsoO5YQEFB5HXWFX7Q1S1uEbPHXL8kR8
wcBf1hPK6rwU3cpUFq2w1fV9hfV6ijlzdSBt7EgSFpMrIhlrZ09lEcjBE3lc
3mOR45jwOhlrWmjEHuVGZTrSAZmg2krqbgE57WrjHHOogJxcQzyYy2udA9Px
jIoKmjNJkcxVoc0/dsi+uomrYLTMluI7VuEf4tdX0r8bXYmczrUTPDh9xvBY
gM88wqh/aJACfxQvq2+R7Xb2KSqxtROuHg41xBVAXZfVtkGOPdySfRkh6Ja1
/+c//3mErMyOT07eEu8Y4sCj4lYcSI0Qm5SXBS49HmFnuRyM7nqOlWYxshJX
ZGqTAX07KkUtThVD4jIjKdC6LmSkHh/KavtFUdxAVHYjZESgio1+Zr59yH6G
eVeHDCY+lFLxS1OLFKeH7Pobc75vfqHx1ukXjndPqvYsU3KuUM9JJb0A7l+C
jsoqeYei1bsU33bKHyp1NUfXNDQ9mmoInKHNz2qhNazENb8VlqwU5AlW31Hq
jk62s6p9MmbyCps+5lfRr8zFQeBl4cUnTLZeF5jEMy8/NBUcqrBAkYnf8mxB
o2XizwI1R4GwXF0ny5qbQuPBsGyns7C1EYMY2D7gpcbCd8MZujDLQ0xPpVtk
Muiq/O2w0OTaMerl12RhSOM1vS/MlA3ysoIF3DLj+QM38px1Uapknp5FVxeo
Ynm9Yt+Fe9D9YIC8i60JS7PoYry+a9efhcjd92OkfWJb/deNWXQ5UnuroaZi
zpZGz5jFvJvZNm6f5Tei9LmsPanw3EVSmr4qoFS1BBAFo/htDRs0Mo4WcEK+
FPrgpNMYZVdXmBTEkuYBvOhslM70mI1muuoQzwDyeLEGid6YZRsCqdFkybaA
ZgCWnbMMFtyMf0MaXZjFabul8b246/iwWsJgR3GBKv0Lng90t949O8BGsG18
Va2pnsfMeG3KUdEIrsr1GY29xGbb0J/FUB/S5ZMVTopGygXsFNsOzbKjDIo9
oFFBZKzljX096eYsbcWUmeFUjZ3oAGxhmch9bcwCHJ1U12iAmrOnDtLohKXC
tLAp7L8Rv3QiqLg13SqEMoy51p07zPVmFNVU51mYM8XCLEpTJ9IjNWsqBV/i
PIt7XcNL1xrpzHvgnpVxOUz2MTXiGV2OA88KmLKUJzva8Mub46IyCv4mz7p+
rvKybTGgvCtUkZ9A5V9NeHXZCSIeu4bR6a+nl3pwILXe2oHP+tS9fyV1OKAY
s9dqbTyIo6OAZgfX+tqp5rgnzqkvyW7CCartdyoo6mJj1/UU3l6lMI/5lFP3
KF46l7/NZWnPWzaLB5jtvZMdGDfm/p31O+sDnkFzY2P6gj5hFusDmhiMVxuA
DRwSS+8aPFd07iqZSUAaEAkigbkK9qla4w2zjeOK7hwFRc2JuhBPF2f3yHc5
bG77bKk83ACOrnahx98ct3ecIHVmpI6M9DnG+E4sFiMqAnlJuY2mIFbxRnPi
0QHhpQEHylopTGmLeaUCEHy2xlnmNKztc8jkO0aMUbjfHz4eXZy3z8aU4jnv
itt9Pz1lcA/OYRaJIpW0LuveNEKEUwLtbU8UcMkXdD2xXbGvThSb9ZWaFrH+
Vk33V1fMSwbXCs7vq7fu/XQJ09G6LvJiiSWsql5W3fJSIe0XCjJ520u/pGCD
B5tjsZNPb98qpL/7/Prthw8nbaECFTjkebFG6ZFXlMf4UgClkZ2x87xXgmhe
UMf46PAXdGUTfI2FPMJsr+PohSt9OVpi9uj4HK/gUkUKri5Bl23tBvRlpU2E
tUjAmExKzHpFYtJjPZ14NRV3q2ONSvTnIUGRss/8AwxmLK74Z6XvRCji6Xfy
MPlOHmkJtMD18lWPvtFHcVmniKrR4y0s2znRkELC6wIoKWQ6oMtgG8iidwJR
Ek3SXFWISRkror8irm/FnO0dvf+sX1ZzAQpHE6HLk0+nhc5USA7cXHGLKhgQ
OSnxzXUZVfQ/wH6K2Q6HXJO+jgXtushiVU6gdCAVDKihHRuKPIJ1CTIPbFhG
SkeDQq7NAOIIpJ629Z5yJvJypTKhr1/bk/n89cmYvaNMtizKygtVboTWUlUe
SAuEjvFC1bcs9QjZo1J5ForNIwBPCm3bKPfeStPf4uTJt+uoEAH3XKsXg+yv
OKa9i4PNggEdVJTCuMICKLRaFP5wetnYQsDY3su+pdxTEars3sxJZwf7ZX1g
NVdK2/w7JdPZXlRWN5l8E9Keuqfiz2zc0Se8EFOtY3TsDlXVJN7BNE4pFgud
85ftgJ129Q3/p2mS9RCgd9er5oqIfkkN1yWJ8XWB2Q66GGPO+52us0O27l7h
hokslVvswfLyrytar5KX0/AWoexGDhJ5Kqr0sm9Xt5J0eF8yPGLs4+k/z4lu
KD3zly9/1qz8ywbx/qmsXxlUsGj0xRxcYHuqTwbg2e/JwuNUZ+eflYD8Mv/r
aoRCDPv7w3cMJurQ87u4fuVP1DXZ89b/qvrOSKTfI0Iv3Gt6Tf3QpX1TqbF8
YZF6q410N1B6pH6CKGxfiU7FnMnYp17wJZBy1Lz+R/p+6Es2CWHJWlIOx5YO
AClVuuoDvZaebHsdGKEaIoWe+B8W9XfgEqb/cFV/197wkwwMELeae7rpQ3Qc
H/lGiOZFRPjmI4g5ZaK5omBV5YgjrIbEIz11VUgVo8b6vE0BQTn9JaBzXWmP
ML8VemeNCuwlPxFx+GoSebrUvdDeupSqs5mVbt9swlWdddk6OOj8UwEdKsdF
KXhyr27xyuSlYnlsVoblkFUFjUOAbjN8ORVpc8FvRUVluKiL5MV2FIsjUBWN
pwriVOZV/xTrqfftHDp1UbZo1doirPTSd8HwHhsHi0V3rI7e/+tnvX3Dqncm
IF1GdaYUrPDBN980L+3hqD2zZOjNZbKmtTlVfGm89I1L8il7qW5JN/ikYBO2
wesak6aluqIsL/NJxOEZKx0hHcKG29izfcsc1SPrt9CRyyzPMWU9tYKrwnfH
VLHI8QoaJfgaJaBcguZ1AFjep3kauALfDYZ01s6KRCpSXZ5WtXwtD7rU6wNJ
baLQNueB+CLPJZa30WXsvr8tl1TvfuKasUBhZ7mu3seXZMqK+qzerJNPABOF
ebWvLlb4Wr6i7L4WBl+rd/T+aEOWu6+LaW+qAgroxraSHHnZGG+TZ3li3lXW
oj1mrKMWroB5iLfAFrenz/BDGnoU9PWCGwPOTi9fs05+lvzAj9qsXaKB19Ao
uDt3jVUjaU+qTu4OBd/g1YE8fb/EN9iBn1gDVSIqMleb2XvyEPYv6FLge9LW
UYMiSonKicyXxYGFu8SU4Gl+m5VFvlR1xMXH0wN23rz/Yq/Z3Fi/56Fv49Sr
JjEqaKy9svRIM3CaVDgv9aqaRcqBYvbu4F5CiFH6r/+SKTXNxtuagKOOYlSv
1It2ZVnvsBgeU1c3VSM6qKtpz6Cpvi8zkPtjXq7wPZylOhPNJVaLEmagF9WK
FfsTvsXpkF3cCzysBZb5kyiuJSd9wBpX9gMv44yP3hUluE+5fKcNrTaSL8tt
rI98e/DgW6FGtky+ZaXsRTcUaIeqSiXiVaZ3YggKOulYCYGBiE5XNnPQGfQK
axcK9SYBORYb5YZJzy2KK4r8bBu74KuLGR6zq6E0a/ta3Efeezy15Ds0sTIa
Jm0PNBVdlROgD6PZry+ac2l5/t0cX2u9QlowKXIxcLxtvHhPFeM3Exsn31uT
KpfX5kukmqoAWX/TvC5Klfb79pxtVN/IlkmvpakAouZJ6MyfXYCBw7zNYaFq
8jebHKCb9RrfOiTfNqrufazLVaHzBQr7yhOl11xnXNVBqSgUNhvzuDQuxqtB
bXnC74c7/IG9Yr/H2073f5CUarpJJ3PXRN0eMBM24ynNZ2Xk9vGBa4cTexJE
tm/PJjz0vTD008BObMcO7AmnVj+WvfzQnsBzx3Vs27XtCMcPjnPkOE/IcR6n
v05qcxyIc8BTe0bj7ZkTzqI4SWfxbDbxvAhm5jBrKGeNhZvYHo5ybT+AlbF9
Bu3udErjPdt3oHU6nbrdVmgJ7RhWdz1noyXAFhzvxdjqeK7tTJpWDq2RNw1C
3/GTwPZjfzqxvZkvfFjD8aGvh31xPPWPoH/iu/40mASeP/Mh8IRfDn1PfQFj
EF+imd+F/sGU1of2NPBgdoTSdoQDOHQdd+ba8K/tBvSvR/87U06trm4l+k26
PTaxtB1DCn+PYGk7hgh/j2JpO4Zo/49iqYuhKewd/vh2MOE4vuER5Kou17jE
iy4MtW0vdLzZDPY6iXwROuE0dZOU6OemU2FHQvizcBYAbqfYfeImSRqEceIE
3PPcNE3CJEk8QE0Y+LN4OoWt8piOd+I4Cqaxx6c2D+IgSaIgnkwSLvw4nMYx
n7rA+bM0iaLUsb14xl1YHXAJ/zpS/pxE7hj+CttzfPjfm3izKYDpC9h7GnOe
ulM/Fh5P0lS4bpx6IHMR4Z+HLgqWmgGExHPwCYjq47MQ/WgmnMVuZkFGhElT
oMHUtW31q6UNQJriMxxPvTwl1Ujzpg+Q03MCeDINHcc1aR8AIeBXKOnf8A7w
DdA62Sb/QMkQgfGm9mQCGigh+gs3iIF9nKkXuxOBYsvT6STx/NSNAhFDWwhE
SSd+EMUidv0wDaIgddypOwmIfinMZnsBn4RcTGOAFyByIzd2Q9eLOHwBrgT+
c4GVpjMvtsMZ59zmcRiQ/AGLuNHMngB6USvC//j0QGpr6U2BX30l8h26f1e3
HXrbiYEmgdTJSCR/WEoD14/8YEIYl9gmvAPGu9L0VElyiO+iMHYcJwgB97NQ
AE382HZhbpFGAjg+CYUbCj4LxCzxp8l0Eoeeb8fTEL6R3nGSBDAJiimwAfWe
G/h2ChIzC2azBAXPdVNAPQwCG+KlTuAEaehM3NSB3lJvg7lIwZ7YO/glIH7x
kMJuGMSJJ2Zx6pPeDRNglCBIZxMRicQLZ3YySxzPSWKYJk4mwRTYxvHiKJnO
wDgB2zohzjNJJx7pDdhlGAdBMAXYwwgUmm9zbwYzArODDU6ASeI4iHgSwDSB
x4M0cabTBFRIsp1Dtlr1nf228Qi+OeHRzwsZ4u57B0SWGbMd5/ixIesc38Qv
kn0gHY2bhiw8enwprIGu9h03PNA8DGKk+fepfOihjiAejqQ/YiNjRsBNQRBO
Ix/0OfC8HfkJUCiNnQRYaTaZojGZInsJEfNA2i43mEQgOLMgSkLucwd4peHy
3RxOtnMnl+/mcKk7dnG55PCWKLNnEMWRRMFxJ+7TiOL5gSYKIDVOdziEDiCC
/kbxsxxC2JUcN5OOIWirjkNISHEmfiLCaeBMwUpPdrmDmwqP1t+i9KTC23Cw
8G8I1iDAv4S0npNFrlXTAx2s7YpWMuXQuk9TtAR/T9k+R9ES/M9iwy4LklAM
siF3A6BEMGvdQ3ITPKQDkTBGutP+bdyN7QD1Qw93CPRyUsd3Eg/YwZ/6YgrI
9GI0uvgL3QJyAqc+0Q8dvQFHejrsKHkzLxLTWZjEYRLFUiiBKwMn9kI/AvUM
iACzHgt/4mx3lPQsOF7OtGuWreZGBTQwtS9dFO5Fjh+AtzTjSTIDFg8dW/hR
6vPJzAbCpkkazyIIfFLBwZEkhyoO09jlng/YmqUTQBPNFIIWcyJQUGCYHB6A
l+N6YFA4bClOI/BKHT+aUTInmroRGJ8EXE0BStAOwR3yJrPYTgcclBcvwFRh
iCxP/bTvQekJI3NUF+bBOVbXV/3y+h9EzfS5jjObjO3xZOy8hMleYjhKXfaP
AIOreg6x/YF8cNwp5m8bdEaDzBoLJ8N6S9otNcQJmbtptgyl6NuyYzioD/Vs
ruzkDyrbF5QS2p8dtG8vBTqBhw+a4cg9Qr/dDaHX3uvT0J7Pj74P9yRsMzZx
g5PtsEFYMVULT3csPDUWBsFAkTkNvKbPHl1n2JOU1XctTpq7FgaxGvyyn+lK
hAHwIUNgDvVkv6gLEJfGyZY8YqC0etS5YdE752M7KAyf8w6Rn+CsdD2VbSTf
gmJN/i30H1pH8cIWZuiOeApjdAb0eWQLk2zZTcswWzhmALqd3NMboFlJQ/aI
+zHge0jvYxK83jlMuh6+qzG3NXslm3/p8nby3+Ttw/5biP0JXgDaCoS+DfTi
hemO/w+qzurm6hHN+XpDrrpi9XRu93bp0S3E3q1Th1bZqV+7A54nUk/Vult2
8pgGHgDtyfLUFScpTadPA2sS+nIViK9OBs2gMUoKE3gLcsjutML/sCQB4CRK
O2H45n/PuDxXDP7PuEjo/peMy3PFQRqXnbhrjIsTaOOyO4ny95GILSbG+i+T
T5Klb3UAAA==

-->

</rfc>

